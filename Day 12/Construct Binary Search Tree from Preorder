/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        return Tree(preorder,0,preorder.length - 1);
    }
    public TreeNode Tree(int[] preorder,int start,int end){
        if(end < start){
            return null;
        }
        TreeNode root = new TreeNode(preorder[start]);
        int i = start;
        while(i <= end){
            if(preorder[i] > preorder[start]){
                break;
            }
            i++;
        }
        root.left = Tree(preorder,start + 1,i - 1);
        root.right = Tree(preorder,i,end);
        return root;
    }
}

