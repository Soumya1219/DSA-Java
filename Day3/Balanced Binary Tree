/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null){
            return true;
        }
        isBalanced(root.left);
        isBalanced(root.right);
        if(heightOfTree(root.left) == -1 || heightOfTree(root.right) == -1){
            return false;
        }
        if(Math.abs(heightOfTree(root.left) - heightOfTree(root.right)) <= 1){
            return true;
        }
        return false;
    }
    public int heightOfTree(TreeNode node){
        if(node == null){
            return 0;
        }
        int left = heightOfTree(node.left);
        int right = heightOfTree(node.right);
        if(left == -1 || right == -1){return -1;}
        if(Math.abs(left - right) > 1){
            return -1;
        }
        return Math.max(left,right) + 1;
    }
}
